-- Description of tecmake oriented software, typical tecgraf programs that need
-- tecmake and tecgraf variables to be compiled. Some dummy packages could
-- also use it, like packages that just need to copy files and make links.
-- ATTENTION: place the fundamental packages first!
-- If A depends on B then you should place B's description before than A's.
packages = {
	-- fake package to easy the download of the oil04 and scs sources
	{ name = "oil04",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/openbus/libs/trunk/oil04",
	},
	{ name = "scs",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/scs/trunk",
	},
	{ name = "lua5.1",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/openbus/libs/trunk/lua5.1.2",
	  build = {
		type = "tecmake",
		src = PRODAPP .."/lua5.1/src",
		mf = { "config", --[["luac", "bin2c",]] },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/liblua5.1.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["../lib/${TEC_UNAME}/liblua5.1.*"] = "libpath/${TEC_UNAME}",
	  	["../include/*"] = "incpath/lua5.1.2",
	  },
	},
	{ name = "lua5.1-bin",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/lua5.1/src",
	  	mf = { "lua", --[["luac", "bin2c",]] },
	  },
	  install_files = {
	  	["../bin/${TEC_UNAME}/lua5.1"] = "bin/${TEC_UNAME}",
	  },
	},
	{ name = "tolua5.1",
	  source = "http://www.tecgraf.puc-rio.br/~openbus/repository/tolua5.1.tar.gz",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/tolua5.1/src",
	  	mf = { "tolua5lib LUA51=../../lua5.1", "tolua5 LUA51=../../lua5.1" },
	  },
	  dev_files = {
	  	["../bin/${TEC_UNAME}/tolua5.1"] = "bin/${TEC_UNAME}",
	  	["../lib/${TEC_UNAME}/libtolua5.1.*"] = "libpath/${TEC_UNAME}",
	  	["../include/tolua.h"] = "incpath/tolua5.1",
	  },
	},
	{ name = "luafilesystem",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/openbus/libs/trunk/luafilesystem-1.4.2/",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/luafilesystem/src",
	  	mf = { "config LUA51=../../lua5.1", },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/liblfs.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["../lib/${TEC_UNAME}/liblfs.*"] = "libpath/${TEC_UNAME}",
	  	["../include/*"] = "incpath/luafilesystem",
	  },
	},
	{ name = "luasocket2",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/openbus/libs/trunk/luasocket2",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/luasocket2/src",
	  	mf = { "config LUA51=../../lua5.1", },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/libluasocket.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["../lib/${TEC_UNAME}/libluasocket.*"] = "libpath/${TEC_UNAME}",
	  	["luasocket.h"] = "incpath/luasocket2",
	  },
	},
	{ name = "oilall",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/oil04/src",
	  	mf = { "oilall LUA51=../../lua5.1", },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/liboilall.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["../lib/${TEC_UNAME}/liboilall.*"] = "libpath/${TEC_UNAME}",
	  	["../include/*"] = "incpath/oil04",
	  },
	},
	{ name = "luuid",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/openbus/libs/trunk/luuid",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/luuid/src",
	  	mf = { "config LUA51=../../lua5.1", },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/libluuid.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["../lib/${TEC_UNAME}/libluuid.*"] = "libpath/${TEC_UNAME}",
	  	["../include/*"] = "incpath/luuid",
	  },
	},
	{ name = "lualdap-1.0.1",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/openbus/libs/trunk/lualdap-1.0.1",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/lualdap-1.0.1/src",
	  	mf = { "config LUA51=../../lua5.1", },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/liblualdap.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["../lib/${TEC_UNAME}/liblualdap.*"] = "libpath/${TEC_UNAME}",
	  	["../include/*"] = "incpath/lualdap-1.0.1",
	  },
	},
	{ name = "latt",
	  source = "http://www.tecgraf.puc-rio.br/~openbus/repository/latt.tar.gz",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/latt",
	  	mf = { },
	  },
	  dev_files = {
	  	["lua/*"] = "libpath/lua/5.1"
	  },
	},
	-- TIP: precompiler.lua precisa do loop!
	{ name = "loop",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/oil04",
	  	mf = { },
	  },
	  dev_files = {
		  ["lua/loop"] = "libpath/lua/5.1", 
		  ["lua/precompiler.lua"] = "libpath/lua/5.1",
		  ["lua/preloader.lua"] = "libpath/lua/5.1",
	  },
	},
	{ name = "scsall",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/scs/src/cpp/cppoil",
	  	mf = { "scsall LOOP_HOME="..INSTALL.TOP.."/libpath/lua/5.1 LUA51="..PRODAPP.."/lua5.1", },
	  },
	  install_files = {
			["../lib/${TEC_UNAME}/libscsall.so"] = "libpath/${TEC_UNAME}",
			["../../../idl/scs.idl"] = "idlpath/",
	  },
	  dev_files = {
			["../lib/${TEC_UNAME}/libscsall.*"] = "libpath/${TEC_UNAME}",
			["../../../idl/scs.idl"] = "idlpath/",
			["../obj/${TEC_UNAME}/scsall.h"] = "incpath/scs",
	  },
	},
	{ name = "scsoil",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/scs/src/cpp/cppoil",
	  	mf = { "config LUA51="..PRODAPP.."/lua5.1", },
	  },
	  install_files = {
			["../lib/${TEC_UNAME}/libscsoil.so"] = "libpath/${TEC_UNAME}",
			["../../../idl/scs.idl"] = "idlpath/",
	  },
	  dev_files = {
			["../lib/${TEC_UNAME}/libscsoil.*"] = "libpath/${TEC_UNAME}",
			["../../../idl/scs.idl"] = "idlpath/",
			["*.h"] = "incpath/scs/cppoil/",
			["luaidl/*.h"] = "incpath/scs/cppoil/luaidl/",
	  },
	},
	{ name = "ftc",
	  source = "svn+https://subversion.tecgraf.puc-rio.br/engsoftware/ftc/trunk",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/ftc/cpp/src",
	  	mf = { "config LUA51="..PRODAPP.."/lua5.1", "without_oil LUA51="..PRODAPP.."/lua5.1", },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/libftc*.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["*.h"] = "incpath/ftc/",
	  	["../lib/${TEC_UNAME}/libftc.*"] = "libpath/${TEC_UNAME}",
	  },
	},
	{ name = "lce",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/lib/lce/src",
	  	mf = { "config LUA51="..PRODAPP.."/lua5.1", },
	  },
	  install_files = {
	  	["../lib/${TEC_UNAME}/liblce*.so"] = "libpath/${TEC_UNAME}",
	  },
	  dev_files = {
	  	["../include/*"] = "incpath/lce/",
	  	["../lib/${TEC_UNAME}/liblce.*"] = "libpath/${TEC_UNAME}",
	  },
	},
	{ name = "openbus-core",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/core/services",
	  	mf = { "config LUA51="..PRODAPP.."/lua5.1", },
	  	--env LFLAGS="-undefined dynamic_lookup"
	  },
	  install_files = {
			["../bin/${TEC_UNAME}/*"] = "core/bin/${TEC_UNAME}",
			["../bin/*.sh"] = "core/bin",
			["../bin/servicelauncher"] = "core/bin",
			["../idl/*"] = "idlpath",
			["../services/accesscontrol"] = "core/services",
			["../services/registry"] = "core/services",
			["../services/session"] = "core/services",
			["../utilities/lua/openbus"] = "core/utilities/lua",
	  },
	  conf_files = {
			["../../data/conf"] = "data",
			["../../data/certificates"] = "data",
	  },
	  -- TODO: include here all templates/openbus.lua messages table!!
	  conf_template = DEPLOYDIR .. "/templates/openbus.lua",
		dev_files = {
			["../test/lua"] = "core/test",
		},
	},
	{ name = "openbus-demo-lua",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/demo/hello/lua",
	  	mf = { },
	  },
	  dev_files = {
			["client.lua"] = "demo/hello/lua",
			["server.lua"] = "demo/hello/lua",
			["run"] = "demo/hello/lua",
			["../idl"] = "demo/hello",
	  },
	},
--[[
	-- Orbix related packages
	{ name = "scsorbix",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/scs/src/cpp/orbix",
	  	mf = { "config genstubs USE_NODEPEND=Yes", "config" },
		-- special compile instructions for solaris8
		SunOS58 = {
			mf = { "config genstubs USE_NODEPEND=Yes", "config", "config sunos58" },
		},
	  },
	  install_files = {
			["../lib/${TEC_UNAME}/libscsorbix.so"] = "libpath/${TEC_UNAME}",
			["../../../idl/scs.idl"] = "idlpath/",
	  },
	  dev_files = {
			["../lib/${TEC_UNAME}/libscsorbix.*"] = "libpath/${TEC_UNAME}",
			["../../../idl/scs.idl"] = "idlpath/",
			["*.h"] = "incpath/scs/orbix/",
	  },
	},
	{ name = "openbus-orbix",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/core/utilities/orbix",
	  	mf = { "config genstubs USE_NODEPEND=Yes", "config" },
		-- special compile instructions for solaris8
		SunOS58 = {
			mf = { "config genstubs USE_NODEPEND=Yes", "config", "config sunos58" },
		}
	  },
	  dev_files = {
			["lib/${TEC_UNAME}/libopenbus*.*"] = "core/utilities/orbix/lib/${TEC_UNAME}",
			["openbus.h"] = "core/utilities/orbix", --include
			["openbus/common/*.h"] = "core/utilities/orbix/openbus/common/",    --include
			["services/*.h"] = "core/utilities/orbix/services/",    --include
			["stubs"] = "core/utilities/orbix",     --include
			["../../test/orbix/acs/*.cpp"] = "core/test/orbix/acs/",
			["../../test/orbix/acs/config.mak"] = "core/test/orbix/acs/",
			["../../test/orbix/rgs/*.cpp"] = "core/test/orbix/rgs/",
			["../../test/orbix/rgs/config.mak"] = "core/test/orbix/rgs/",
			["../../test/orbix/config*"] = "core/test/orbix/",
			["../../test/orbix/runtests"] = "core/test/orbix/",
	  },
	},
	{ name = "openbus-orbix-test",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/core/test/orbix",
	  	mf = { "config cxxtest -C acs", "config -C acs", "config cxxtest -C rgs", "config -C rgs" },
	  },
	  install_files = {
			["bin/${TEC_UNAME}/*"] = "core/test/orbix/bin/${TEC_UNAME}",
			["config*"] = "core/test/orbix/",
			["runtests"] = "core/test/orbix/",
	  },
	},
	{ name = "openbus-demo-orbix",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/demo/hello/orbix63",
	  	mf = { "server genstubs USE_NODEPEND=Yes", "client", "server" },
	  },
	  dev_files = {
			["bin/${TEC_UNAME}/*"] = "demo/hello/orbix63/bin/${TEC_UNAME}",
			["../idl/hello.idl"] = "demo/hello/orbix63",
			["client.cpp"] = "demo/hello/orbix63",
			["server.cpp"] = "demo/hello/orbix63",
			["run*"] = "demo/hello/orbix63",
			["*.mak"] = "demo/hello/orbix63",
			["*config"] = "demo/hello/orbix63",
			["run*"] = "demo/hello/orbix63",
			["client"] = "demo/hello/orbix63",
			["server"] = "demo/hello/orbix63",
	  },
	},
--]]
--[[
	-- CPPOiL related packages, it needs of loop to work (precompiler.lua dependency)
	{ name = "openbus-cppoil",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/core/utilities/cppoil",
	  	mf = { "config LUA51="..PRODAPP.."/lua5.1", },
	  },
	  dev_files = {
			["lib/${TEC_UNAME}/libopenbus*.*"] = "core/utilities/cppoil/lib/${TEC_UNAME}",
			["openbus.h"] = "core/utilities/cppoil", --include
			["common"] = "core/utilities/cppoil",    --include
			["luaidl"] = "core/utilities/cppoil",    --include
			["stubs"] = "core/utilities/cppoil",     --include
			["openbus.lua"] = "core/utilities/cppoil",
			["../../test/cppoil"] = "core/test",
	  },
	},
	{ name = "openbus-demo-cppoil",
	  build = {
	  	type = "tecmake",
	  	src = SVNDIR .."/demo/hello/cppoil",
	  	mf = { "client LUA51="..PRODAPP.."/lua5.1", "server LUA51="..PRODAPP.."/lua5.1"},
	  },
	  dev_files = {
			["bin/${TEC_UNAME}/*"] = "demo/hello/cppoil/bin/${TEC_UNAME}",
			["hello.cpp"] = "demo/hello/cppoil",
			["hello.hpp"] = "demo/hello/cppoil",
			["helloStub.h"] = "demo/hello/cppoil",
			["helloStub.cpp"] = "demo/hello/cppoil",
			["client.cpp"] = "demo/hello/cppoil",
			["server.cpp"] = "demo/hello/cppoil",
			["*.mak"] = "demo/hello/cppoil",
			["../idl"] = "demo/hello",
	  },
	},
--]]
--[[
	-- MICO related packages
	{ name = "scsmico",
	  build = {
	  	type = "tecmake",
	  	src = PRODAPP .."/scs/src/cpp/mico",
	  	mf = { "config" },
	  },
	  install_files = {
			["../lib/${TEC_UNAME}/libscsmico.so"] = "libpath/${TEC_UNAME}",
			["../../../idl/scs.idl"] = "idlpath/",
	  },
	  dev_files = {
			["../lib/${TEC_UNAME}/libscsmico.*"] = "libpath/${TEC_UNAME}",
			["../../../idl/*"] = "idlpath",
			["*.h"] = "incpath/scs/mico",
	  },
	},
--]]
	-- self-packaging the tools as an important bootstrap strategy to deployment!
	{ name = "tools",
	  build = {
		type = "tecmake",
		src = SVNDIR .."/tools/src",
	  	mf = { "config LUA51="..PRODAPP.."/lua5.1", },
	  },
	  install_files = {
			["../bin/${TEC_UNAME}/*"] = "tools/bin/${TEC_UNAME}",
			["../*.desc"] = "tools",
			["../profiles"] = "tools",
			["../shell"] = "tools",
			["../templates"] = "tools",
	  },
	},
	-- Java related packages	
	{ name = "openbus-java",
	  build = {
	  	type = "maven",
	  	src = SVNDIR .."/core/utilities",	  	
	  },
	  install_files = {
			["target/*.jar"] = "/core/utilities/java",
	  },
	},
	{ name = "openbusidl-java",
	  build = {
	  	type = "maven",
	  	src = SVNDIR .."/core/idl",
	  },
	  install_files = {
			["target/*.jar"] = "/core/utilities/java",
	  },
	},
	{ name = "openbus-demo-java",
	  build = {
	  	type = "maven",
	  	src = SVNDIR .."/demo/hello",
	  },
	  install_files = {
			["target/*.jar"] = "/demo/hello/java",
	  },
	},
--	{ name = "ldap-Linux26g4",
--		src = "/",
--		mf = { },
--		install_files = {
--			["/usr/lib/libldap.so.2"] = "libpath/${TEC_UNAME}/",
--		},
--		dev_files = {
--			["/usr/include/ldap.h"] = "incpath/ldap/",
--		},
--	},
}
