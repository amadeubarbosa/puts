#! /bin/ksh
### BEGIN INIT INFO
# Provides:          openbus
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: OpenBus initscript
# Description:       Manage the lifecycle of the OpenBus Middleware Services.
### END INIT INFO

# Author: Amadeu A. Barbosa Jr <amadeu@tecgraf.puc-rio.br>
# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/usr/sbin:/usr/bin:/sbin:/bin
# === CHANGE HERE !!! == Please provide your path to openbus installation
OPENBUS_HOME=/home/msv/openbus/openbus/install
DESC="OpenBus Middleware Services"
NAME=openbus
SCRIPT_DIR=$OPENBUS_HOME/core/bin
SCRIPT_ACS=./run_access_control_server.sh
SCRIPT_RGS=./run_registry_server.sh
#SCRIPT_SS=run_session_server.sh
LOG_ACS=$OPENBUS_HOME/data/acs.log
LOG_RGS=$OPENBUS_HOME/data/rgs.log
#LOG_SS=$OPENBUS_HOME/data/ss.log
PID_ACS=$OPENBUS_HOME/data/acs.pid
PID_RGS=$OPENBUS_HOME/data/rgs.pid
#PID_SS=
SCRIPTNAME=/etc/init.d/$NAME

export OPENBUS_HOME

# Exit if the package is not installed
if [ -z "$OPENBUS_HOME" ]; then 
	echo "ERROR: OPENBUS_HOME variable not defined! Aborting."
	exit 2
fi
if [ ! -x "$SCRIPT_DIR/$SCRIPT_ACS" ]; then
	echo "ERROR: $SCRIPT_DIR/$SCRIPT_ACS is not executable! Aborting."
	exit 2
fi
if [ ! -x "$SCRIPT_DIR/$SCRIPT_RGS" ]; then
	echo "ERROR: $SCRIPT_DIR/$SCRIPT_RGS is not executable! Aborting."
	exit 2
fi

# Read configuration variable file if it is present
#[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
[ -f /etc/default/rcS ] && . /etc/default/rcS

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
#. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	# Launchs AccessControlServer
	echo "Starting $DESC : AccessControlServer "
	cd $SCRIPT_DIR 2>/dev/null
	echo "============= accesscontrolserver starting: `date` at: `pwd` ===============" >> $LOG_ACS
	$SCRIPT_ACS >> $LOG_ACS 2>&1 &
	pid=$!
	sleep 1
	# Checks if any signal can be sent (process exists)
	kill -0 $pid 2>/dev/null
	ret=$?
	if [ "$ret" == 0 ]; then
		echo "[ OK ]"
		echo "$pid" > $PID_ACS
	else
		echo "[ FAILED ]"
		cd - >/dev/null
		return 2
	fi
	# Wait a bit while AccessControl starts correctly
	sleep 1
	
	# Launchs RegistryServer
	echo "Starting $DESC : RegistryServer "
	echo "============= registryserver starting: `date` at: `pwd` ===============" >> $LOG_RGS
	$SCRIPT_RGS >> $LOG_RGS 2>&1 &
	pid=$!
	sleep 1
	# Checks if any signal can be sent (process exists)
	kill -0 $pid 2>/dev/null
	ret=$?
	if [ "$ret" == 0 ]; then
		echo "[ OK ]"
		echo "$pid" > $PID_RGS
	else
		echo "[ FAILED ]"
		cd - >/dev/null
		return 2
	fi
	cd - >/dev/null
	return 0
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	
	echo "Stopping $DESC : RegistryServer "
	kill -15 `cat $PID_RGS 2>/dev/null` 2>/dev/null || kill -9 `cat $PID_RGS 2>dev/null` 2>/dev/null
	echo "[ OK ]"
	echo "Stopping $DESC : AccessControlServer "
	kill -15 `cat $PID_ACS 2>/dev/null` 2>/dev/null || kill -9 `cat $PID_ACS 2>/dev/null` 2>/dev/null
	echo "[ OK ]"

	rm -f $PID_ACS $PID_RGS
	return 0
}

case "$1" in
  start)
	do_start
	case "$?" in
		0|1) exit 0 ;;
		2) exit 1 ;;
	esac
	;;
  stop)
	do_stop
	case "$?" in
		0|1) exit 0 ;;
		2) exit 1 ;;
	esac
	;;
  restart|force-reload)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	echo "Restarting $DESC"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) exit 0 ;;
			*) exit 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		exit 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}"
	exit 3
	;;
esac

:
